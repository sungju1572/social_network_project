textTier[i,5],
textTier[i,6] ))
print(
paste0( textTier[i,2],
textTier[i,3],
textTier[i,4],
textTier[i,5],
textTier[i,6] ))
}
champLine
match_count <- counter %>%
group_by(champion1) %>%
summarise(count = sum(match_count))
match_count
source('C:/Users/gksxo/Desktop/Project/github/social_network_project/TaeGyu/OPGG/DataPreprocessing.R', echo=TRUE)
match_count
champLine
textTier[,1]
champLine
match_count[,2]
nodes <- data.frame( id = textTier[,1],
line = champLine,
match_count = match_count[,2])
nodes
links <- counter %>%
mutate(winning_rageText = ifelse(winning_rage>50,"Win", ifelse(winning_rage<50, "Lose", "Draw")))
links
links <- links[, c(2,3,4,5,6,1)]
colnames(nodes) <- c()
colnames(links) <- c( "from"
, "to"
, "winningRate"
, "matchCount"
, "winningRateText"
, "line" )
net <- graph_from_data_frame(links,vertices = nodes,directed = T)
links <- links[, c(2,3,4,5,6,1)]
links
colnames(links) <- c( "from"
, "to"
, "winningRate"
, "matchCount"
, "winningRateText"
, "line" )
nodes
colnames(nodes)
nodes <- data.frame( id = textTier[,1],
line = champLine,
match_count = match_count[,2])
nodes
net <- graph_from_data_frame(links,vertices = nodes,directed = T)
write.csv(nodes, "./nodes.csv")
write.csv(links, "./edges.csv")
nodes <- read_csv("./csv/igraph_data/nodes.csv")[,2:4]
setwd("C:/Users/gksxo/Desktop/Project/github/social_network_project/TaeGyu/OPGG")
nodes <- read_csv("./csv/igraph_data/nodes.csv")[,2:4]
edges <- read_csv("./csv/igraph_data/edges.csv")[,2:7]
makeNodeShape <- function()
{
shape <- c()
for (i in seq(length(orginNodes$champion))) {
shape <- c(shape,
max(orginNodes[i,2],
orginNodes[i,3],
orginNodes[i,4],
orginNodes[i,5],
orginNodes[i,6]))
}
nodeShape <- c()
for (i in shape) {
if ( i == 1 ) {
nodeShape <- c(nodeShape, "star")
} else if (  i == 2 ) {
nodeShape <- c(nodeShape, "diamond")
} else if (  i == 3 ) {
nodeShape <- c(nodeShape, "circle")
} else if (  i == 4 ) {
nodeShape <- c(nodeShape, "triangle")
} else if (  i == 5 ) {
nodeShape <- c(nodeShape, "square")
}
}
return(nodeShape)
}
nodeShape <- makeNodeShape()
## 색 지정하기
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
colors <- sample(col_vector, 18)
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
shape = nodeShape,
title = paste0("<p>Line : <b>", nodes$line,"</b></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
nodes
colnames(nodes) <- ("champion", "line", "count")
colnames(nodes) <- c("champion", "line", "count")
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
shape = nodeShape,
title = paste0("<p>Line : <b>", nodes$line,"</b></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
NODES_DATA
View(NODES_DATA)
as.numeric(factor(nodes$champion))
nodes$champion
factor(nodes$champion)
as.numeric(factor(nodes$champion))
nodes$champion
nodes$line
as.numeric(factor(nodes$champion))
View(NODES_DATA)
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
shape = nodeShape,
title = paste0("<p>Line : <b>", nodes$line,"</b></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
orginEdges
as.numeric(factor(nodes$champion))
nodes$champion
champNumeric <- data.frame(
to = as.numeric(factor(nodes$champion)),
champion2  = nodes$champion
)
orginEdges
orginEdges <- left_join(orginEdges,champNumeric,by='champion1')
orginEdges
champNumeric <- data.frame(
to = as.numeric(factor(nodes$champion)),
champion1  = nodes$champion
)
orginEdges
champNumeric1 <- data.frame(
from = as.numeric(factor(nodes$champion)),
champion1  = nodes$champion
)
champNumeric2 <- data.frame(
to = as.numeric(factor(nodes$champion)),
champion2  = nodes$champion
)
orginEdges <- left_join(orginEdges,champNumeric1,by='champion1')
orginEdges <- left_join(orginEdges,champNumeric2,by='champion2')
edgeColor <- c()
for ( i in orginEdges$winning_rage ){
if ( i > 50 ) {
edgeColor <- c(edgeColor, "#8CB4F7")
} else if ( i < 50 ){
edgeColor <- c(edgeColor, "#F6807F")
} else {
edgeColor <- c(edgeColor, "#C4F2C2")
}
}
edgeArrows <- c()
for ( i in orginEdges$winning_rage ){
if ( i > 50 ) {
edgeArrows <- c(edgeArrows, "from")
} else if ( i < 50 ){
edgeArrows <- c(edgeArrows, "to")
} else {
edgeArrows <- c(edgeArrows, "middle")
}
}
EDGE_DATA <- data.frame(
from = orginEdges$from,
to = orginEdges$to,
label = orginEdges$winning_rage,
color = edgeColor,
arrows = edgeArrows,
value = orginEdges$line
)
EDGE_DATA
NODES_DATA[26:27,]
NODES_DATA
NODES_DATA[3]
NODES_DATA[3,]
NODES_DATA[7,]
EDGE_DATA %>%
filter(from == 33, to == 35)
EDGE_DATA %>%
filter(from == 35, to == 33)
NODES_DATA[c(3,7),]
EDGE_DATA
EDGE_DATA %>%
filter(from == 33, to == 35)
EDGE_DATA %>%
filter(from == 33, to == 35) %>%
filter(from == 35, to == 33)
EDGE_DATA %>%
filter(from == 33, to == 35)
EDGE_DATA %>%
filter(from == 33, to == 35)
EDGE_DATA %>%
filter(from == 33 & to == 35)
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33) )
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33)) )
colors[as.numeric(as.factor(nodes$line))]
as.factor(nodes$line))
orginEdges$winning_rage
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33)) )
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33)) )
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
nodes
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
shape = nodeShape,
title = paste0("<p>Line : <b>", nodes$line,"</b></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
size  = nodes$count,
shadow = FALSE
)
visNetwork(NODES_DATA, EDGE_DATA, width = "100%")
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
NODES_DATA[c(3,7),],
NODES_DATA[c(3,7),]
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(NODES_DATA, EDGE_DATA, width = "100%")
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Matching Count : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(NODES_DATA, EDGE_DATA, width = "100%")
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
# node 데이터
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(NODES_DATA, EDGE_DATA, width = "100%")
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
nodes$champion
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = nodes$count,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(NODES_DATA, EDGE_DATA, width = "100%")
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
# node 데이터
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
# shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
# node 데이터
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
# shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
# node 데이터
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
nodes$count
1/nodes$count
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = 1/nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
NODES_DATA[c(3,7),],
NODES_DATA[c(3,7),]
# node 데이터
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
# shape = nodeShape,
size  = 1/nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
# shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
# shape = nodeShape,
# size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNetwork(
NODES_DATA[c(3,7),],
EDGE_DATA %>%
filter((from == 33 & to == 35) | (from == 35 & to == 33))
)
NODES_DATA <- data.frame(
id = as.numeric(factor(nodes$champion)),
shape = nodeShape,
size  = nodes$count,
label = nodes$champion,
group = nodes$line,
value = as.numeric(factor(nodes$champion)),
title = paste0("<p>Line : <b>", nodes$line,"</b><br>Match Cnt : <br>",nodes$count,"</br></p>"),
color = colors[as.numeric(as.factor(nodes$line))],
shadow = FALSE
)
visNodes(
NODES_DATA,
id = NULL,
shape = NULL,
size = NULL,
title = NULL,
value = NULL,
x = NULL,
y = NULL,
label = NULL,
level = NULL,
group = NULL,
hidden = NULL,
image = NULL,
mass = NULL,
physics = NULL,
borderWidth = NULL,
borderWidthSelected = NULL,
brokenImage = NULL,
labelHighlightBold = NULL,
color = NULL,
fixed = NULL,
font = NULL,
icon = NULL,
shadow = NULL,
scaling = NULL,
shapeProperties = NULL,
heightConstraint = NULL,
widthConstraint = NULL,
margin = NULL,
chosen = NULL
)
visNetwork(NODES_DATA, EDGE_DATA, width = "100%")
